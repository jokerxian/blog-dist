import{_ as a,c as i,o as t,a2 as s}from"./chunks/framework.BgExJILf.js";const b=JSON.parse('{"title":"宝塔面板安装","description":"","frontmatter":{},"headers":[],"relativePath":"column/linux/宝塔.md","filePath":"column/linux/宝塔.md"}'),e={name:"column/linux/宝塔.md"},n=s('<h1 id="宝塔面板安装" tabindex="-1">宝塔面板安装 <a class="header-anchor" href="#宝塔面板安装" aria-label="Permalink to &quot;宝塔面板安装&quot;">​</a></h1><h2 id="_1-安装宝塔面板" tabindex="-1">1.安装宝塔面板 <a class="header-anchor" href="#_1-安装宝塔面板" aria-label="Permalink to &quot;1.安装宝塔面板&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yum install </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y wget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">O install.sh https</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh ed8484bec</span></span></code></pre></div><p>安装成功后就是这个样子： <img src="https://img-blog.csdnimg.cn/direct/1f0c1c3cc6374747b2b610a27cb114d1.png" alt="在这里插入图片描述"></p><h2 id="_2-登录" tabindex="-1">2.登录 <a class="header-anchor" href="#_2-登录" aria-label="Permalink to &quot;2.登录&quot;">​</a></h2><p><img src="https://img-blog.csdnimg.cn/direct/f2f0fa0b8af843399576417825ecedcf.png" alt="在这里插入图片描述"> 根据安装成功页面提供的账号密码登录即可，登录后需要注册宝塔账号，这里按照指引完成注册就好。完成操作后会提示安装需要的环境配置，按需选择就行 <img src="https://img-blog.csdnimg.cn/direct/23344ef575754868b79b3e86f2b276c3.png" alt="在这里插入图片描述"></p><h2 id="_3-相关操作" tabindex="-1">3.相关操作 <a class="header-anchor" href="#_3-相关操作" aria-label="Permalink to &quot;3.相关操作&quot;">​</a></h2><h3 id="_3-1数据库" tabindex="-1">3.1数据库 <a class="header-anchor" href="#_3-1数据库" aria-label="Permalink to &quot;3.1数据库&quot;">​</a></h3><p>添加需要管理的数据库连接 <img src="https://img-blog.csdnimg.cn/direct/668e57b349f649618112ee628e8d9523.png" alt="在这里插入图片描述"> 添加数据库</p><p><img src="https://img-blog.csdnimg.cn/direct/9da92de5662c426e88d9ac44dc120df9.png" alt="在这里插入图片描述"> 然后数据库就会出现一个这样的库 <img src="https://img-blog.csdnimg.cn/direct/d3f207031bb0461688f9f5d61e60a519.png" alt="在这里插入图片描述"></p><h3 id="_3-2-docker" tabindex="-1">3.2 docker <a class="header-anchor" href="#_3-2-docker" aria-label="Permalink to &quot;3.2 docker&quot;">​</a></h3><p>这里是docker的管理，可以拉去镜像，启动容器等，应用商店也有配置好的服务，可以根据需要选择 <img src="https://img-blog.csdnimg.cn/direct/f97e1632821c4cb790cb92aecbb31199.png" alt="在这里插入图片描述"></p><h3 id="_3-3-安全" tabindex="-1">3.3 安全 <a class="header-anchor" href="#_3-3-安全" aria-label="Permalink to &quot;3.3 安全&quot;">​</a></h3><p>这里是linux的安全策略，可以手动配置，开放端口，限制ip <img src="https://img-blog.csdnimg.cn/direct/eb35aa70c0754f619ad29a0cea8a7b8c.png" alt="在这里插入图片描述"></p>',14),c=[n];function l(h,r,d,o,p,g){return t(),i("div",null,c)}const k=a(e,[["render",l]]);export{b as __pageData,k as default};
